<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="http://localhost:8080/">
  <title>thewalkingdeaf.net blog</title>
  <subtitle>Tell the word what you are writing about in your blog. It will show up on feed readers.</subtitle>
  <link href="http://localhost:8080/feed.xml" rel="self" />
  <link href="http://localhost:8080/" />
  
  <updated>2024-02-01T00:00:00Z</updated>
  <id>http://localhost:8080/</id>
  <author>
    <name>Steve Simons</name>
    <email>steve@thewalkingdeaf.net</email>
  </author>
  <entry>
    <title>Eleventy Excellent 2.0</title>
    <link href="http://localhost:8080/blog/eleventy-excellent-20/" />
    <updated>2024-02-01T00:00:00Z</updated>
    <id>http://localhost:8080/blog/eleventy-excellent-20/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;I changed so much, that documenting everything will be hard. I will try and name the most important changes in the next few weeks.&lt;/p&gt;
&lt;h2 id=&quot;maybe-a-quick-why-first&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/eleventy-excellent-20/#maybe-a-quick-why-first&quot;&gt;Maybe a quick “why” first&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I created this starter after I saw &lt;a href=&quot;https://eleventy-excellent.netlify.app/about/#watch-the-talk&quot; rel=&quot;noopener&quot;&gt;Andy’s talk&lt;/a&gt; and studied the source code for &lt;a href=&quot;http://buildexcellentwebsit.es/&quot; rel=&quot;noopener&quot;&gt;buildexcellentwebsit.es&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I quickly came to the conclusion that this is the way I want to build all my websites from now on! It’s so great. I know many of you feel the same way.&lt;/p&gt;
&lt;p&gt;I had already accumulated a lot of opinions, files and basic settings from my previous Eleventy projects, and to make it easier for me to start a new project in the future, I combined everything in this starter. The name is a tribute to its origin:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Go Forth And Build &lt;strong&gt;Excellent&lt;/strong&gt; Websites”!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When that was finished, I thought it was only fair to make it easily accessible to others, and at the end of 2022 I registered the starter with the &lt;a href=&quot;https://www.11ty.dev/docs/starter/&quot; rel=&quot;noopener&quot;&gt;official stater projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What I didn’t count on, was &lt;em&gt;how many&lt;/em&gt; people would actually go and use the starter.&lt;/p&gt;
&lt;p&gt;So many of you have also contacted me or contributed something.&lt;/p&gt;
&lt;h2 id=&quot;i-wanted-to-make-the-starter-better&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/eleventy-excellent-20/#i-wanted-to-make-the-starter-better&quot;&gt;I wanted to make the starter better&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have since made sure that everything stays fairly updated, fixed a few bugs and added a few features – but I haven’t quite dared to change the base too much, now that so many others were involved.&lt;/p&gt;
&lt;p&gt;The thing is, I have learned &lt;strong&gt;lots of new things&lt;/strong&gt; and changed my mind about other stuff like naming or organization in the last year and a half. Whenever I begin a project now, I still turn to this starter – but I modify &lt;em&gt;a lot&lt;/em&gt; before I get started. This goes above all for the organization and naming of files and folders, modern CSS, and better accessibility.&lt;/p&gt;
&lt;p&gt;You will see that many things are new and different, but better! And that the basic character is still the same.&lt;/p&gt;
&lt;p&gt;I will try and take some time to document important changes so you can upgrade more easily.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/madrilene/eleventy-excellent/tree/v1&quot; rel=&quot;noopener&quot;&gt;I have kept v1 in a separate branch.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;plans-for-the-future&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/eleventy-excellent-20/#plans-for-the-future&quot;&gt;Plans for the future&lt;/a&gt;&lt;/h2&gt;
&lt;ul class=&quot;list&quot;&gt;
&lt;li&gt;I will change everything to ES modules as soon as Eleventy v3 with ESM support is stable.&lt;/li&gt;
&lt;li&gt;I might bring back the drawer menu as something to opt in (&lt;strong&gt;Update:&lt;/strong&gt; I did this already, see “&lt;a href=&quot;http://localhost:8080/get-started/#navigation&quot;&gt;Get started&lt;/a&gt;”).&lt;/li&gt;
&lt;li&gt;Lots of small fixes, no doubt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Thank you and let’s build more excellent websites!&lt;/strong&gt;&lt;/p&gt;
</content
    >
  </entry>
  <entry>
    <title>What is Tailwind CSS doing here?</title>
    <link href="http://localhost:8080/blog/what-is-tailwind-css-doing-here/" />
    <updated>2023-11-30T00:00:00Z</updated>
    <id>http://localhost:8080/blog/what-is-tailwind-css-doing-here/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;&lt;strong&gt;Update February 2024:&lt;/strong&gt;&lt;br /&gt;
The CSS system of this starter was invented by Andy Bell.&lt;br /&gt;
I wrote the following explanation quite quickly after hearing several times that people are confused about normal Tailwind CSS classes not working. In the meantime, Andy has published a &lt;a href=&quot;https://piccalil.li/blog/a-css-project-boilerplate/&quot; rel=&quot;noopener&quot;&gt;much better and much more detailed explanation&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;We are using Tailwinds “engine” to generate utility classes on demand, based on our design tokens.&lt;/p&gt;
&lt;p&gt;If you have a look at the &lt;a href=&quot;https://github.com/madrilene/eleventy-excellent/blob/main/tailwind.config.js&quot; rel=&quot;noopener&quot;&gt;tailwind.config.js&lt;/a&gt;, you can see how that is done. For example, we are &lt;a href=&quot;https://github.com/madrilene/eleventy-excellent/blob/main/tailwind.config.js#L67C1-L69C5&quot; rel=&quot;noopener&quot;&gt;deactivating Tailwinds default reset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are hooking into the components layer, to make Tailwind output classes based on our tokens, instead of their default design system.&lt;/p&gt;
&lt;p&gt;That is, you are able to use &lt;code&gt;mt-xs-s&lt;/code&gt; instead of a class like &lt;code&gt;mt-20&lt;/code&gt; for example. Same goes for colors, depending on the names you defined in your &lt;code&gt;colors.json&lt;/code&gt;, you get custom classes like &lt;code&gt;text-primary&lt;/code&gt;. These use the usual Tailwind prefixes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token string-property property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;my custom color name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token string-property property&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pink&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You get a custom property mapped to the color name &lt;code&gt;pink&lt;/code&gt;: &lt;code&gt;--color-my-custom-color-name: pink&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; the classes &lt;code&gt;bg-my-custom-color-name&lt;/code&gt; as well as &lt;code&gt;text-my-custom-color-name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Consider that we limit those utilities in the theme section:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token function-variable function&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;theme&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;colors&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token function-variable function&quot;&gt;textColor&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;theme&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;colors&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token function-variable function&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;theme&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token literal-property property&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;auto&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;spacing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token function-variable function&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;theme&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;spacing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to add the generation for border-color classes for example, you’d have to add that right there:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;borderColor: ({theme}) =&amp;gt; theme(&#39;colors&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also. you &lt;em&gt;do&lt;/em&gt; have something like &lt;code&gt;md:text-right&lt;/code&gt; available because we define the screens on line 26:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token literal-property property&quot;&gt;screens&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;50em&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;lg&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;80em&#39;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;`&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, you get custom properties based on the naming of your design token files, the prefix is defined in line 77:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; groups &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;colors&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;color&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;spacing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;space&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;fontSize&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;size&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;fontFamily&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;font&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your dev tools you can see all the generated custom properties + your custom ones from &lt;code&gt;css/global/variables.css&lt;/code&gt;.&lt;br /&gt;
They are generated by default.&lt;/p&gt;
&lt;p&gt;&lt;picture class=&quot;flow&quot;&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/custom-properties-440w.avif 440w, http://localhost:8080/assets/images/custom-properties-880w.avif 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/custom-properties-440w.webp 440w, http://localhost:8080/assets/images/custom-properties-880w.webp 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/custom-properties-440w.jpeg 440w, http://localhost:8080/assets/images/custom-properties-880w.jpeg 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/custom-properties-880w.jpeg&quot; width=&quot;880&quot; height=&quot;815&quot; alt=&quot;Screenshot of the Firefox dev tools, CSS tab, showing the generated custom properties&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;You can also create custom utility classes on line 104:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; customUtilities &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;spacing&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;flow-space&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;--flow-space&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token literal-property property&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;colors&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;spot-color&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;--spot-color&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example: &lt;code&gt;{key: &#39;spacing&#39;, prefix: &#39;gutter&#39;, property: &#39;--gutter&#39;}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you install the Tailwind CSS IntelliSense addon, you can actually see the classes available to you, including the color preview.&lt;/p&gt;
&lt;p&gt;&lt;picture class=&quot;flow&quot;&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/intellisense-440w.avif 440w, http://localhost:8080/assets/images/intellisense-880w.avif 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/intellisense-440w.webp 440w, http://localhost:8080/assets/images/intellisense-880w.webp 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/intellisense-440w.jpeg 440w, http://localhost:8080/assets/images/intellisense-880w.jpeg 880w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/intellisense-880w.jpeg&quot; width=&quot;880&quot; height=&quot;495&quot; alt=&quot;Screenshot in VS Code showing the available flow-space-classes we created, using the Tailwind CSS IntelliSense addon&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Read some thoughts that lead Andy Bell to come up with that approach: &lt;a href=&quot;https://andy-bell.co.uk/i-used-tailwind-for-the-u-in-cube-css-and-i-liked-it/&quot; rel=&quot;noopener&quot;&gt;https://andy-bell.co.uk/i-used-tailwind-for-the-u-in-cube-css-and-i-liked-it/&lt;/a&gt;&lt;/p&gt;
</content
    >
  </entry>
  <entry>
    <title>Demo pages</title>
    <link href="http://localhost:8080/blog/demo-pages/" />
    <updated>2023-10-30T00:00:00Z</updated>
    <id>http://localhost:8080/blog/demo-pages/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: As of version 2.0, the demos featured here are all directly built in the starter.&lt;/p&gt;
&lt;p&gt;I did not want to clutter the starter with too many features, that you might not need, but I find myself using them frequently for my own projects, so now they are “baked in”.&lt;br /&gt;
I will keep the old demo repos for the moment, but they are not maintained and are deprecated.&lt;/p&gt;
&lt;p&gt;If you never saw version 1, nevermind.&lt;/p&gt;
&lt;h2 id=&quot;demos&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/demo-pages/#demos&quot;&gt;Demos&lt;/a&gt;&lt;/h2&gt;
&lt;article class=&quot;flow my-m-l&quot;&gt;
   &lt;h3&gt;Gallery&lt;/h3&gt;
   &lt;p&gt;A gallery with good old &amp;quot;popup&amp;quot; functionality inside a dialog element and a regular loop over images.
   &lt;/p&gt;&lt;div class=&quot;cluster&quot;&gt;
   &lt;a class=&quot;button no-indicator&quot; href=&quot;http://localhost:8080/blog/post-with-a-gallery/&quot;&gt;Demo&lt;/a&gt;
   &lt;/div&gt;
&lt;/article&gt;
&lt;article class=&quot;flow my-m-l&quot;&gt;
   &lt;h3&gt;Pagination&lt;/h3&gt;
   &lt;p&gt;The blog collection with a pagination. To work with visual current page indication, :has() pseudo-class support is required.
   &lt;/p&gt;&lt;div class=&quot;cluster&quot;&gt;
   &lt;a class=&quot;button no-indicator&quot; href=&quot;http://localhost:8080/blog/page-0/&quot;&gt;Demo&lt;/a&gt;
   &lt;/div&gt;
&lt;/article&gt;
&lt;article class=&quot;flow my-m-l&quot;&gt;
   &lt;h3&gt;Tags&lt;/h3&gt;
   &lt;p&gt;The blog has a basic tag system. Tags can be stored in front matter, as a YAML list or as an array.
   &lt;/p&gt;&lt;div class=&quot;cluster&quot;&gt;
   &lt;a class=&quot;button no-indicator&quot; href=&quot;http://localhost:8080/tags/&quot;&gt;Demo&lt;/a&gt;
   &lt;/div&gt;
&lt;/article&gt;
</content
    >
  </entry>
  <entry>
    <title>Open Graph images</title>
    <link href="http://localhost:8080/blog/open-graph-images/" />
    <updated>2023-01-25T00:00:00Z</updated>
    <id>http://localhost:8080/blog/open-graph-images/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;When you share your blog posts, a thumbnail image may appear - the image we define in our meta data as an Open Graph Image (&lt;code&gt;og:image&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This starter generates these images for your blog posts automatically. They take in the title and date of the post.&lt;/p&gt;
&lt;figure class=&quot;flow&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/og-preview-440w.avif 440w, http://localhost:8080/assets/images/og-preview-880w.avif 880w, http://localhost:8080/assets/images/og-preview-1024w.avif 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/og-preview-440w.webp 440w, http://localhost:8080/assets/images/og-preview-880w.webp 880w, http://localhost:8080/assets/images/og-preview-1024w.webp 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/og-preview-440w.jpeg 440w, http://localhost:8080/assets/images/og-preview-880w.jpeg 880w, http://localhost:8080/assets/images/og-preview-1024w.jpeg 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/og-preview-1024w.jpeg&quot; width=&quot;1024&quot; height=&quot;537&quot; alt=&quot;Open Graph image preview of a blog Post. &#39;Eleventy Excellent 2.0&#39; is written as a large title in the center, the date is shown above and the name and URL of the website is seen on the bottom. The backgrpund consists of layered pink color areas resembling a city skyline&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;figcaption&gt;This is what an OG image for a blog posts looks right now&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The fallback and default image for all other pages is the image set as &lt;code&gt;opengraph_default&lt;/code&gt; in the &lt;code&gt;meta.js&lt;/code&gt; global data file.&lt;/p&gt;
&lt;figure class=&quot;flow&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/opengraph-default-440w.avif 440w, http://localhost:8080/assets/images/opengraph-default-880w.avif 880w, http://localhost:8080/assets/images/opengraph-default-1024w.avif 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/opengraph-default-440w.webp 440w, http://localhost:8080/assets/images/opengraph-default-880w.webp 880w, http://localhost:8080/assets/images/opengraph-default-1024w.webp 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/opengraph-default-440w.jpeg 440w, http://localhost:8080/assets/images/opengraph-default-880w.jpeg 880w, http://localhost:8080/assets/images/opengraph-default-1024w.jpeg 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/opengraph-default-1024w.jpeg&quot; width=&quot;1024&quot; height=&quot;542&quot; alt=&quot;Visible content: Eleventy starter built around the CSS workflow for Cube CSS, Every Layout, Design Tokens and Tailwind for uitility, based on the concepts explained in buildexcellentwebsit.es&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;figcaption&gt;This is what the general OG image for non-blog posts looks like&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;A more detailed explanation can be found in the &lt;a href=&quot;http://localhost:8080/get-started/#open-graph-images&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with all the markdown</title>
    <link href="http://localhost:8080/blog/post-with-all-the-markdown/" />
    <updated>2022-11-02T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-all-the-markdown/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;A lot of markdown packages are installed to help you write your posts.&lt;br /&gt;
You can configure them in &lt;code&gt;config/plugins/markdown.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As of my personal preference, there are some presets. For example the conversion of web pages to links (&lt;a href=&quot;http://www.lenesaile.com/&quot; rel=&quot;noopener&quot;&gt;www.lenesaile.com&lt;/a&gt;) and the addition of &lt;code&gt;rel=&amp;quot;noopener&amp;quot;&lt;/code&gt; for external links (all links with the pattern &lt;code&gt;/^https?:/&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a tiny pitfall!&lt;/strong&gt;&lt;br /&gt;
Take care to not prefix your internal links with your domain, or else they will be treated ad external as well. To link internally use this pattern:&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;An internal link to the &lt;span class=&quot;token url&quot;&gt;[&lt;span class=&quot;token content&quot;&gt;about page&lt;/span&gt;](&lt;span class=&quot;token url&quot;&gt;/about/&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;h2-heading&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#h2-heading&quot;&gt;h2 Heading&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h3-heading&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#h3-heading&quot;&gt;h3 Heading&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h4-heading&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#h4-heading&quot;&gt;h4 Heading&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Muffin bonbon jujubes cheesecake chupa chups shortbread ice cream cotton candy cake. Jelly-o biscuit dessert danish dessert pastry tootsie roll lemon drops gingerbread. Cheesecake donut marzipan sweet roll icing muffin halvah. Dragée donut cake biscuit pie carrot cake sesame snaps jelly-o gummi bears.&lt;/p&gt;
&lt;p&gt;Soufflé topping shortbread lemon.&lt;/p&gt;
&lt;h2 id=&quot;hr&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#hr&quot;&gt;hr&lt;/a&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;typographic-replacements&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#typographic-replacements&quot;&gt;Typographic replacements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The replacement converts this input:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;(c) (C) (r) (R) (tm) (TM) +-
and so on.. and so on... and so on..... AND SO ON???????.....
WTF!!!!!! How many exclamation marks are you going to use????????????
,, -- ---
&quot;double quotes&quot; and &#39;single quotes&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;To this:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;© © ® ® ™ ™ ±&lt;br /&gt;
and so on… and so on… and so on… AND SO ON???..&lt;br /&gt;
WTF!!! How many exclamation marks are you going to use???&lt;br /&gt;
, – —&lt;br /&gt;
“double quotes” and ‘single quotes’&lt;/p&gt;
&lt;h2 id=&quot;emphasis&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#emphasis&quot;&gt;Emphasis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This is bold text&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;This is italic text&lt;/em&gt;&lt;br /&gt;
&lt;s&gt;Strikethrough&lt;/s&gt;&lt;/p&gt;
&lt;h2 id=&quot;blockquote&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#blockquote&quot;&gt;Blockquote&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Cheesecake donut marzipan sweet roll icing muffin halvah. Dragée donut cake biscuit pie carrot cake sesame snaps jelly-o gummi bears. Cotton candy cookie croissant fruitcake.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;lists&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#lists&quot;&gt;Lists&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;unordered-lists&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#unordered-lists&quot;&gt;Unordered lists&lt;/a&gt;&lt;/h3&gt;
&lt;ul class=&quot;list&quot;&gt;
&lt;li&gt;Create a list by starting a line with &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Another item&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;ordered-lists&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#ordered-lists&quot;&gt;Ordered lists&lt;/a&gt;&lt;/h3&gt;
&lt;ol class=&quot;list&quot;&gt;
&lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt;
&lt;li&gt;Consectetur adipiscing elit&lt;/li&gt;
&lt;li&gt;Integer molestie lorem at massa&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;code&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#code&quot;&gt;Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Syntax highlighting&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.back-top-top&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 10px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; white&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 110vh&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; sticky&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/* by David Darnes */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;tables&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#tables&quot;&gt;Tables&lt;/a&gt;&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technology&lt;/th&gt;
&lt;th&gt;Fun fact&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTML&lt;/td&gt;
&lt;td&gt;HTML (Hypertext Markup Language) was created by Sir Tim Berners-Lee in 1991 as a way to structure and link documents on the World Wide Web.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSS&lt;/td&gt;
&lt;td&gt;It’s called “cascading” because styles can cascade down from parent elements to their children, allowing for inheritance and overriding.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JavaScript&lt;/td&gt;
&lt;td&gt;TypeError: null is not an object&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;links&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#links&quot;&gt;Links&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://moderncss.dev/&quot; rel=&quot;noopener&quot;&gt;Read all those articles&lt;/a&gt;&lt;br /&gt;
Autoconverted link &lt;a href=&quot;https://every-layout.dev/&quot; rel=&quot;noopener&quot;&gt;https://every-layout.dev/&lt;/a&gt; (enabled via linkify)&lt;/p&gt;
&lt;h2 id=&quot;emojis&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#emojis&quot;&gt;Emojis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Literal:&lt;/strong&gt;&lt;br /&gt;
🤩 💯 💚 👻 👾&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Classic markup:&lt;/strong&gt;&lt;br /&gt;
😢 💩 🔥 😆 🎄&lt;br /&gt;
(&lt;a href=&quot;https://gist.github.com/rxaviers/7360908&quot; rel=&quot;noopener&quot;&gt;A reference for emoji markup&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shortcuts (emoticons)&lt;/strong&gt;:&lt;br /&gt;
😃 😦 😎 😉 😛&lt;/p&gt;
&lt;h2 id=&quot;mark&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#mark&quot;&gt;mark&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;mark&gt;Marked text&lt;/mark&gt;&lt;/p&gt;
&lt;h2 id=&quot;footnotes&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#footnotes&quot;&gt;Footnotes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Footnote 1 link&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;.&lt;br /&gt;
Footnote 2 link&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#fn2&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;*[HTML]: Hyper Text Markup Language&lt;/p&gt;
&lt;h2 id=&quot;images&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#images&quot;&gt;Images&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Consider that &lt;code&gt;src&lt;/code&gt; is already prepended in the settings.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.webp 440w, http://localhost:8080/assets/images/EHwkdjzoWm-880.webp 880w, http://localhost:8080/assets/images/EHwkdjzoWm-1024.webp 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.jpeg 440w, http://localhost:8080/assets/images/EHwkdjzoWm-880.jpeg 880w, http://localhost:8080/assets/images/EHwkdjzoWm-1024.jpeg 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; alt=&quot;Close-up with unfocused background of a vibrant large blue butterfly gracefully perched on a delicate flower amidst lush green grass&quot; src=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.jpeg&quot; width=&quot;1024&quot; height=&quot;680&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;hr class=&quot;footnotes-sep&quot; /&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
&lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;Footnote &lt;strong&gt;can have markup&lt;/strong&gt;&lt;br /&gt;
and multiple paragraphs. &lt;a href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;&lt;p&gt;Footnote text. &lt;a href=&quot;http://localhost:8080/blog/post-with-all-the-markdown/#fnref2&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with a video </title>
    <link href="http://localhost:8080/blog/post-with-a-video/" />
    <updated>2022-10-31T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-a-video/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;This starter uses Justin Ribeiro’s lite-youtube web component. Add &lt;code&gt;youtube: true&lt;/code&gt; to frontmatter to activate.&lt;/p&gt;
  &lt;div class=&quot;youtube-embed&quot;&gt; &lt;lite-youtube videoid=&quot;Ah6je_bBSH8&quot; style=&quot;background-image: url(&#39;https://i.ytimg.com/vi/Ah6je_bBSH8/hqdefault.jpg&#39;);&quot;&gt;
  &lt;button type=&quot;button&quot; class=&quot;lty-playbtn&quot;&gt;
    &lt;span class=&quot;lyt-visually-hidden&quot;&gt;Alberto Ballesteros - Artista Sin Obra&lt;/span&gt;
  &lt;/button&gt;
&lt;/lite-youtube&gt;&lt;/div&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with an image </title>
    <link href="http://localhost:8080/blog/post-with-an-image/" />
    <updated>2022-10-12T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-an-image/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;This starter uses Eleventy’s build-time image transformations.&lt;/p&gt;
&lt;p&gt;Find more info on &lt;a href=&quot;https://www.11ty.dev/docs/plugins/image/&quot; rel=&quot;noopener&quot;&gt;https://www.11ty.dev/docs/plugins/image/&lt;/a&gt; and edit settings in &lt;code&gt;config/shortcodes/image&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-an-image/#syntax&quot;&gt;Syntax&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the most basic version it contains the path to the image, alt text (can be an empty string if the image is decorative), and may hold a caption.&lt;/p&gt;
&lt;pre class=&quot;language-jinja2&quot;&gt;&lt;code class=&quot;language-jinja2&quot;&gt;&lt;span class=&quot;token jinja2 language-jinja2&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;eleventyImage&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path to image&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;caption text&quot;&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It defaults to &lt;code&gt;loading = &#39;lazy&#39;&lt;/code&gt;, the picture element gets its set of images from &lt;code&gt;widths = [440, 880, 1024, 1360]&lt;/code&gt; and compares to a condition of &lt;code&gt;90vw&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to be very specific, you can pass in manually all the conditions, add &lt;code&gt;null&lt;/code&gt; to skip.&lt;/p&gt;
&lt;p&gt;The class names are passed in the outer container, the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element (&lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; is added if you set a caption).&lt;/p&gt;
&lt;pre class=&quot;language-jinja2&quot;&gt;&lt;code class=&quot;language-jinja2&quot;&gt;&lt;span class=&quot;token jinja2 language-jinja2&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;eleventyImage&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path to image&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;caption text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;eager&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;class names&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;(min-width:30em) 50vw, 100vw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token jinja2 language-jinja2&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;eleventyImage&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path to image&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alt text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;eager&quot;&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example-image-with-a-caption&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-an-image/#example-image-with-a-caption&quot;&gt;Example image with a caption&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;language-jinja2&quot;&gt;&lt;code class=&quot;language-jinja2&quot;&gt;&lt;span class=&quot;token jinja2 language-jinja2&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;eleventyImage&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/assets/images/gallery/asturias-2.jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Close-up of a delicate white flower with a yellow center, surrounded by green leaves&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Jasmine nightshades blooming in July&quot;&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&quot;flow&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-2-440w.avif 440w, http://localhost:8080/assets/images/asturias-2-880w.avif 880w, http://localhost:8080/assets/images/asturias-2-1024w.avif 1024w, http://localhost:8080/assets/images/asturias-2-1360w.avif 1360w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-2-440w.webp 440w, http://localhost:8080/assets/images/asturias-2-880w.webp 880w, http://localhost:8080/assets/images/asturias-2-1024w.webp 1024w, http://localhost:8080/assets/images/asturias-2-1360w.webp 1360w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-2-440w.jpeg 440w, http://localhost:8080/assets/images/asturias-2-880w.jpeg 880w, http://localhost:8080/assets/images/asturias-2-1024w.jpeg 1024w, http://localhost:8080/assets/images/asturias-2-1360w.jpeg 1360w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/asturias-2-1360w.jpeg&quot; width=&quot;1360&quot; height=&quot;903&quot; alt=&quot;Close-up of a delicate white flower with a yellow center, surrounded by green leaves&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;figcaption&gt;Jasmine nightshades blooming in July&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&quot;example-image-with-all-the-arguments&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-an-image/#example-image-with-all-the-arguments&quot;&gt;Example image with all the arguments&lt;/a&gt;&lt;/h3&gt;
&lt;pre class=&quot;language-jinja2&quot;&gt;&lt;code class=&quot;language-jinja2&quot;&gt;&lt;span class=&quot;token jinja2 language-jinja2&quot;&gt;&lt;span class=&quot;token delimiter punctuation&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;token tag keyword&quot;&gt;eleventyImage&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/assets/images/gallery/asturias-3.jpg&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;A traditional Asturian village with it&#39;s raised granaries, surrounded by lush green hills and mountains&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;lazy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;class-that-does-nothing&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;(min-width:30em) 50vw, 100vw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token delimiter punctuation&quot;&gt;%}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;picture class=&quot;flow class-that-does-nothing&quot;&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-3-200w.avif 200w, http://localhost:8080/assets/images/asturias-3-400w.avif 400w&quot; sizes=&quot;(min-width:30em) 50vw, 100vw&quot; /&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-3-200w.webp 200w, http://localhost:8080/assets/images/asturias-3-400w.webp 400w&quot; sizes=&quot;(min-width:30em) 50vw, 100vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/asturias-3-200w.jpeg 200w, http://localhost:8080/assets/images/asturias-3-400w.jpeg 400w&quot; sizes=&quot;(min-width:30em) 50vw, 100vw&quot; /&gt;&lt;img src=&quot;http://localhost:8080/assets/images/asturias-3-400w.jpeg&quot; width=&quot;400&quot; height=&quot;265&quot; alt=&quot;A traditional Asturian village with it&#39;s raised granaries, surrounded by lush green hills and mountains&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;markdown-sytnax&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-an-image/#markdown-sytnax&quot;&gt;Markdown sytnax&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks to the &lt;a href=&quot;https://github.com/solution-loisir/markdown-it-eleventy-img&quot; rel=&quot;noopener&quot;&gt;markdown-it-eleventy-img&lt;/a&gt; package markdown also has it own image syntax. &lt;code&gt;src&lt;/code&gt; is already prepended here, see &lt;code&gt;config/plugins/markdown.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;[&lt;span class=&quot;token content&quot;&gt;alt text&lt;/span&gt;](&lt;span class=&quot;token url&quot;&gt;/path/to/image&lt;/span&gt;)&lt;/span&gt;
&lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;[&lt;span class=&quot;token content&quot;&gt;Close-up with unfocused background of a vibrant large blue butterfly gracefully perched on a delicate flower amidst lush green gras&lt;/span&gt;](&lt;span class=&quot;token url&quot;&gt;/assets/images/gallery/asturias-4.jpg&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.webp 440w, http://localhost:8080/assets/images/EHwkdjzoWm-880.webp 880w, http://localhost:8080/assets/images/EHwkdjzoWm-1024.webp 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;source type=&quot;image/jpeg&quot; srcset=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.jpeg 440w, http://localhost:8080/assets/images/EHwkdjzoWm-880.jpeg 880w, http://localhost:8080/assets/images/EHwkdjzoWm-1024.jpeg 1024w&quot; sizes=&quot;90vw&quot; /&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; alt=&quot;Close-up with unfocused background of a vibrant large blue butterfly gracefully perched on a delicate flower amidst lush green gras&quot; src=&quot;http://localhost:8080/assets/images/EHwkdjzoWm-440.jpeg&quot; width=&quot;1024&quot; height=&quot;680&quot; /&gt;&lt;/picture&gt;&lt;/p&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with some code</title>
    <link href="http://localhost:8080/blog/post-with-some-code/" />
    <updated>2022-09-01T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-some-code/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;This theme uses 11ty’s &lt;a href=&quot;https://www.11ty.dev/docs/plugins/syntaxhighlight/&quot; rel=&quot;noopener&quot;&gt;Syntax Highlighting Plugin&lt;/a&gt;, a pack of Eleventy plugins for PrismJS syntax highlighting. No browser/client JavaScript, highlight transformations are all done at build-time.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; cards &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;.card&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
cards&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;card&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  card&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cursor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;pointer&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; down&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    up&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    link &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; card&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  card&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onmousedown&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;down &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  card&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onmouseup&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    up &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;up &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; down &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// © Heydon Pickering&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.smol-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;100% - 3rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;--container-max&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 60ch&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;margin-inline&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/* © Stephanie Eckles, https://smolcss.dev/ */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit styles in &lt;code&gt;css/blocks/code.css&lt;/code&gt;&lt;/p&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with 301 redirects</title>
    <link href="http://localhost:8080/blog/post-with-301-redirects/" />
    <updated>2022-08-28T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-301-redirects/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;URLs usually change over time, as you use another CMS or optimize your file structure.&lt;/p&gt;
&lt;p&gt;A 301 is used when a page has permanently changed location.&lt;br /&gt;
Informing about this change is indispensable if you want to keep your incoming links working, be it from organic Google search or other pages that have linked to your content.&lt;/p&gt;
&lt;p&gt;Aleksandr Hovhannisyan came up with an &lt;a href=&quot;https://www.aleksandrhovhannisyan.com/blog/eleventy-netlify-redirects/&quot; rel=&quot;noopener&quot;&gt;elegant solution for Eleventy and Netlify&lt;/a&gt;. To directly cover several possible previous routes it is created as an array. You can find the loop in &lt;code&gt;_redirects.njk&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;usage&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-301-redirects/#usage&quot;&gt;Usage&lt;/a&gt;&lt;/h2&gt;
&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;Frontmatter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;redirectFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/old-route/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/optionally-another-old-route/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content
    >
  </entry>
  <entry>
    <title>Post with fetched content</title>
    <link href="http://localhost:8080/blog/post-with-fetched-content/" />
    <updated>2022-08-28T00:00:00Z</updated>
    <id>http://localhost:8080/blog/post-with-fetched-content/</id>
    <content
      xml:lang="en_EN"
      type="html"
      >&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/docs/plugins/fetch/&quot; rel=&quot;noopener&quot;&gt;Eleventy Fetch&lt;/a&gt; fetches and caches resources – at configurable intervals.&lt;/p&gt;
&lt;p&gt;This is an example of fetching external data.&lt;br /&gt;
In this case, my public repositories (with more than zero stargazer) and a cache duration of 1 day.&lt;/p&gt;
&lt;p&gt;Endpoint editable in &lt;code&gt;_data/github.js.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;eleventy-excellent&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-fetched-content/#eleventy-excellent&quot;&gt;&lt;a href=&quot;https://github.com/madrilene/eleventy-excellent&quot; rel=&quot;noopener&quot;&gt;eleventy-excellent&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;318 GitHub stars&lt;/strong&gt;&lt;br /&gt;
Eleventy starter based on the workflow suggested by Andy Bell&#39;s &lt;a href=&quot;http://buildexcellentwebsit.es/&quot; rel=&quot;noopener&quot;&gt;buildexcellentwebsit.es&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;eleventy-i18n&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-fetched-content/#eleventy-i18n&quot;&gt;&lt;a href=&quot;https://github.com/madrilene/eleventy-i18n&quot; rel=&quot;noopener&quot;&gt;eleventy-i18n&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;18 GitHub stars&lt;/strong&gt;&lt;br /&gt;
Minimal starter for localized content, using Eleventy&#39;s own Internationalization (I18n) plugin&lt;/p&gt;
&lt;h2 id=&quot;lenesailecom&quot;&gt;&lt;a class=&quot;heading-anchor&quot; href=&quot;http://localhost:8080/blog/post-with-fetched-content/#lenesailecom&quot;&gt;&lt;a href=&quot;https://github.com/madrilene/lenesaile.com&quot; rel=&quot;noopener&quot;&gt;lenesaile.com&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;25 GitHub stars&lt;/strong&gt;&lt;br /&gt;
My personal website built with Eleventy. It supports three languages.&lt;/p&gt;
</content
    >
  </entry>
</feed>
